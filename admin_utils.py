# -*- coding: utf-8 -*-
import sqlite3

def init_db():
    conn = sqlite3.connect('school_bot.db')
    cursor = conn.cursor()
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            phone TEXT UNIQUE,
            personal_code TEXT UNIQUE,
            student_name TEXT,
            group_id INTEGER,
            balance REAL DEFAULT 0,
            is_verified BOOLEAN DEFAULT FALSE
        )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –≥—Ä—É–ø–ø
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS groups (
            group_id INTEGER PRIMARY KEY,
            group_name TEXT,
            teacher TEXT,
            schedule_data TEXT
        )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –∑–∞–Ω—è—Ç–∏–π
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS lessons (
            lesson_id INTEGER PRIMARY KEY,
            group_id INTEGER,
            lesson_date TEXT,
            lesson_time TEXT,
            classroom TEXT,
            teacher TEXT,
            status TEXT DEFAULT 'scheduled'
        )
    ''')
    
    conn.commit()
    conn.close()
    print("–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

def clear_old_data():
    """–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    conn = sqlite3.connect('school_bot.db')
    cursor = conn.cursor()
    
    cursor.execute("DELETE FROM users")
    cursor.execute("DELETE FROM groups")
    cursor.execute("DELETE FROM lessons")
    
    conn.commit()
    conn.close()
    print("–°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!")

def add_sample_data():
    conn = sqlite3.connect('school_bot.db')
    cursor = conn.cursor()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã
    groups = [
        (1, "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-1", "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "–ü–Ω, –°—Ä, –ü—Ç - 18:00"),
        (2, "–§–∏–∑–∏–∫–∞-1", "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "–í—Ç, –ß—Ç - 17:00"),
        (3, "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ-1", "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", "–ü–Ω, –°—Ä - 19:00")
    ]
    
    cursor.executemany('INSERT OR REPLACE INTO groups VALUES (?, ?, ?, ?)', groups)
    print("–ì—Ä—É–ø–ø—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–Ω—è—Ç–∏—è
    lessons = [
        (1, 1, "2024-01-15", "18:00", "–ê—É–¥–∏—Ç–æ—Ä–∏—è 101", "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "scheduled"),
        (2, 1, "2024-01-17", "18:00", "–ê—É–¥–∏—Ç–æ—Ä–∏—è 101", "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "scheduled"),
        (3, 2, "2024-01-16", "17:00", "–ê—É–¥–∏—Ç–æ—Ä–∏—è 202", "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "scheduled"),
        (4, 3, "2024-01-15", "19:00", "–ê—É–¥–∏—Ç–æ—Ä–∏—è 303", "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", "scheduled")
    ]
    
    cursor.executemany('INSERT OR REPLACE INTO lessons VALUES (?, ?, ?, ?, ?, ?, ?)', lessons)
    print("–ó–∞–Ω—è—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ë–ï–ó user_id (–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    test_users = [
        (None, "+79123456789", "123456", "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", 1, 1500.0, False),
        (None, "+79111111111", "111111", "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", 2, 2000.0, False),
        (None, "+79222222222", "222222", "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤", 3, 1800.0, False)
    ]
    
    for user in test_users:
        cursor.execute('''
            INSERT OR REPLACE INTO users 
            (user_id, phone, personal_code, student_name, group_id, balance, is_verified) 
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', user)
    
    print("–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
    
    conn.commit()
    conn.close()
    print("–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É!")

def check_database():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('school_bot.db')
    cursor = conn.cursor()
    
    print("\n=== –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
    tables = cursor.fetchall()
    print("–¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ:", [table[0] for table in tables])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã
    cursor.execute("SELECT * FROM groups")
    groups = cursor.fetchall()
    print(f"\n–ì—Ä—É–ø–ø—ã ({len(groups)} —à—Ç.):")
    for group in groups:
        print(f"  ID: {group[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {group[1]}, –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {group[2]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute("SELECT * FROM users")
    users = cursor.fetchall()
    print(f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)} —à—Ç.):")
    for user in users:
        print(f"  UserID: {user[0]}, –¢–µ–ª–µ—Ñ–æ–Ω: {user[1]}, –ö–æ–¥: {user[2]}, –ò–º—è: {user[3]}, –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {user[6]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–Ω—è—Ç–∏—è
    cursor.execute("SELECT * FROM lessons")
    lessons = cursor.fetchall()
    print(f"\n–ó–∞–Ω—è—Ç–∏—è ({len(lessons)} —à—Ç.):")
    for lesson in lessons:
        print(f"  ID: {lesson[0]}, –ì—Ä—É–ø–ø–∞: {lesson[1]}, –î–∞—Ç–∞: {lesson[2]}, –í—Ä–µ–º—è: {lesson[3]}")
    
    conn.close()

if __name__ == '__main__':
    print("–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    init_db()          # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    clear_old_data()   # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    add_sample_data()  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    check_database()   # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å
    print("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("\nüîê –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print("   123456 - –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ (–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞)")
    print("   111111 - –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞ (–§–∏–∑–∏–∫–∞)") 
    print("   222222 - –ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤ (–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ)")
